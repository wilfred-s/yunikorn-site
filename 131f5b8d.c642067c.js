(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{245:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),p=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=p(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(t),d=r,m=l["".concat(i,".").concat(d)]||l[d]||h[d]||o;return t?a.a.createElement(m,s(s({ref:n},u),{},{components:t})):a.a.createElement(m,s({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},64:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return l}));var r=t(2),a=t(6),o=(t(0),t(245)),i=["components"],s={id:"rn-0.11.0",title:"Release Announcement v0.11.0"},c={type:"mdx",permalink:"/release-announce/0.11.0",source:"@site/src/pages/release-announce/0.11.0.md"},u=[{value:"Overview",id:"overview",children:[]},{value:"Highlights",id:"highlights",children:[{value:"Supported Kubernetes Versions",id:"supported-kubernetes-versions",children:[]},{value:"Gang Scheduling enhancements",id:"gang-scheduling-enhancements",children:[]},{value:"Spark operator integration",id:"spark-operator-integration",children:[]},{value:"Scheduler Metrics enhancements",id:"scheduler-metrics-enhancements",children:[]},{value:"User/Group Resolution",id:"usergroup-resolution",children:[]},{value:"Web UI and REST API usability enhancements",id:"web-ui-and-rest-api-usability-enhancements",children:[]}]},{value:"Community",id:"community",children:[]}],p={rightToc:u};function l(e){var n=e.components,t=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"release-announcement-v0110"},"Release Announcement v0.11.0"),Object(o.b)("p",null,"It gives us great pleasure to announce that the Apache YuniKorn (Incubating) community has voted to release 0.11.0. Apache YuniKorn (Incubating) is a standalone resource scheduler, designed for managing, and scheduling Big Data workloads on the container orchestration framework for on-prem and on-cloud use cases.\nThis release has a couple of REST API, UI usability and Gang scheduling improvements."),Object(o.b)("h2",{id:"overview"},"Overview"),Object(o.b)("p",null,"The Apache YuniKorn (Incubating) community has fixed over 110 JIRAs in this release: ",Object(o.b)("a",{parentName:"p",href:"https://issues.apache.org/jira/issues/?filter=12350521"},"YuniKorn jiras resolved in 0.11.0")),Object(o.b)("p",null,"Release manager: Kinga Marton"),Object(o.b)("p",null,"Release date: 2021-08-18"),Object(o.b)("h2",{id:"highlights"},"Highlights"),Object(o.b)("h3",{id:"supported-kubernetes-versions"},"Supported Kubernetes Versions"),Object(o.b)("p",null,"In this release supported Kubernetes versions have been updated to 1.17.x, 1.18.x and 1.19.x. (Earlier versions support 1.16.x, 1.17.x and 1.18.x.) YuniKorn support matrix primarily supports 3 major Kubernetes versions."),Object(o.b)("h3",{id:"gang-scheduling-enhancements"},"Gang Scheduling enhancements"),Object(o.b)("p",null,"The community has been made further improvements to the ",Object(o.b)("a",{parentName:"p",href:"http://yunikorn.apache.org/docs/user_guide/gang_scheduling"},"Gang Scheduling")," feature. ",Object(o.b)("a",{parentName:"p",href:"http://yunikorn.apache.org/docs/user_guide/gang_scheduling#gang-scheduling-styles"},"Gang scheduling style")," now can be configured per app, soft or hard. This allows the users to customize the behavior how to handle the reservation timeout. There are also lots of enhancements to improve the lifecycle management of the placeholder pods, make the cleanup more robust and reliable. More detail can be found in ",Object(o.b)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/YUNIKORN-553"},"YUNIKORN-553"),"."),Object(o.b)("h3",{id:"spark-operator-integration"},"Spark operator integration"),Object(o.b)("p",null,"By leveraging the YuniKorn's app management framework, now it is better integrated with Spark operator. YuniKorn watches spark CRD resources and reacts when necessary. It is totally transparent to use YuniKorn with Spark operator on K8s, no extra configuration needed. This feature is ready for production use. More detail can be found in ",Object(o.b)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/YUNIKORN-558"},"YUNIKORN-558"),"."),Object(o.b)("h3",{id:"scheduler-metrics-enhancements"},"Scheduler Metrics enhancements"),Object(o.b)("p",null,"YuniKorn exposes core ",Object(o.b)("a",{parentName:"p",href:"http://yunikorn.apache.org/docs/next/performance/metrics"},"scheduling metrics")," via Prometheus, in this release, some important metrics such as allocating_latency_seconds, long_pending_apps have been added to the system, based on which the cluster admins can create more alerts to monitor system healthy. There are more enhancements have been made to the existing metrics, such as apps/queues, to make them more readable, and better organized. Please find more details in ",Object(o.b)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/YUNIKORN-3"},"YUNIKORN-3"),"."),Object(o.b)("h3",{id:"usergroup-resolution"},"User/Group Resolution"),Object(o.b)("p",null,"With the work done in ",Object(o.b)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/YUNIKORN-649"},"YUNIKORN-649"),", now users can define how to retrieve user/group identity for each app, and pod. This is done via a configurable environment variable USER_LABEL_KEY, so users can specify which label will be used for YuniKorn to retrieve the user identity. The document can be found ",Object(o.b)("a",{parentName:"p",href:"http://yunikorn.apache.org/docs/next/user_guide/usergroup_resolution"},"here"),"."),Object(o.b)("h3",{id:"web-ui-and-rest-api-usability-enhancements"},"Web UI and REST API usability enhancements"),Object(o.b)("p",null,"The community has made some usability improvements for the web UI to provide better user experience. The UI has been simplified to display the useful data in the apps/nodes page, some usability bugs have been fixed. With this release, some new REST API endpoints were introduced to make it possible to fetch per partition/queue information. You can find a complete list of endpoints ",Object(o.b)("a",{parentName:"p",href:"http://yunikorn.apache.org/docs/api/scheduler"},"here"),"."),Object(o.b)("h2",{id:"community"},"Community"),Object(o.b)("p",null,"The Apache YuniKorn community is pleased to welcome new committer Manikandan R and new PPMC member, Kinga Marton. We would love to see more committers joining the community and help to shape the project. In the past few months, we continue to have bi-weekly community meetings in 2 different time zones, ad-hoc meetings, offline channel discussions. The community will continue to be open."))}l.isMDXComponent=!0}}]);